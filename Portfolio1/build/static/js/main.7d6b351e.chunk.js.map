{"version":3,"sources":["components/Reps.js","components/Laps.js","App.js","reportWebVitals.js","index.js"],"names":["Reps","props","state","reps","this","onClick","setState","Component","Laps","useState","lap","setLap","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+NAwBeA,E,kDArBR,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,GAHK,E,0CAS1B,WAAU,IAAD,OAEL,OACI,gCACI,+CAAkBC,KAAKF,MAAMC,QAC7B,wBAAQE,QAAW,kBAAM,EAAKC,SAAS,CAACH,KAAM,EAAKD,MAAMC,KAAO,KAAhE,kBACA,wBAAQE,QAAW,kBAAM,EAAKC,SAAS,CAACH,KAAM,KAA9C,kC,GAhBOI,a,aCcJC,MAbf,WAAgB,IAAD,EACWC,mBAAS,GADpB,mBACJC,EADI,KACCC,EADD,KAGV,OACI,gCACI,wCAAWD,KACX,wBAAQL,QAAW,kBAAMM,EAAOD,EAAM,IAAtC,iBACA,wBAAQL,QAAW,kBAAMM,EAAO,IAAhC,4BCGEC,MAVf,WACE,OACE,gCACA,kDACA,cAAC,EAAD,IACA,cAAC,EAAD,QCIWC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.7d6b351e.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass Reps extends Component {\r\n       constructor(props) {\r\n           super(props);\r\n           this.state = {\r\n               reps: 0\r\n           };\r\n       };\r\n  \r\n     \r\n\r\nrender() {\r\n\r\n    return(\r\n        <div>\r\n            <h2>Repetitions: {this.state.reps}</h2>\r\n            <button onClick = {() => this.setState({reps: this.state.reps + 1})}>Reps</button>\r\n            <button onClick = {() => this.setState({reps: 0})}>Reset Counter</button>\r\n        </div>\r\n    );\r\n}\r\n}\r\n\r\nexport default Reps;","import React, {useState} from 'react';\r\nimport  './Laps.css';\r\n\r\nfunction Laps(){\r\n    const [lap, setLap] = useState(0);\r\n\r\n     return(\r\n         <div>\r\n             <h2>Laps: {lap}</h2>\r\n             <button onClick = {() => setLap(lap + 1)}>Lap</button>\r\n             <button onClick = {() => setLap(0)}>Reset Laps</button>\r\n         </div>\r\n     )\r\n\r\n}\r\n\r\nexport default Laps;","\nimport Reps from './components/Reps';\nimport Laps from './components/Laps';\nfunction App() {\n  return (\n    <div>\n    <h1>Exercise Tracker</h1>\n    <Reps/>\n    <Laps/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}